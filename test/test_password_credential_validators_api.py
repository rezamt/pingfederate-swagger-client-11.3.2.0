# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.password_credential_validators_api import PasswordCredentialValidatorsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestPasswordCredentialValidatorsApi(unittest.TestCase):
    """PasswordCredentialValidatorsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.password_credential_validators_api.PasswordCredentialValidatorsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_password_credential_validator(self):
        """Test case for create_password_credential_validator

        Create a new password credential validator instance  # noqa: E501
        """
        pass

    def test_delete_password_credential_validator(self):
        """Test case for delete_password_credential_validator

        Delete a password credential validator instance.  # noqa: E501
        """
        pass

    def test_get_password_credential_validator(self):
        """Test case for get_password_credential_validator

        Find a password credential validator by ID.  # noqa: E501
        """
        pass

    def test_get_password_credential_validator_descriptor(self):
        """Test case for get_password_credential_validator_descriptor

        Get the description of a password credential validator by ID.  # noqa: E501
        """
        pass

    def test_get_password_credential_validator_descriptors(self):
        """Test case for get_password_credential_validator_descriptors

        Get a list of available password credential validator descriptors.  # noqa: E501
        """
        pass

    def test_get_password_credential_validators(self):
        """Test case for get_password_credential_validators

        Get the list of available password credential validators  # noqa: E501
        """
        pass

    def test_update_password_credential_validator(self):
        """Test case for update_password_credential_validator

        Update a password credential validator instance.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
