# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.oauthtoken_exchangegenerator_api import OauthtokenExchangegeneratorApi  # noqa: E501
from swagger_client.rest import ApiException


class TestOauthtokenExchangegeneratorApi(unittest.TestCase):
    """OauthtokenExchangegeneratorApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.oauthtoken_exchangegenerator_api.OauthtokenExchangegeneratorApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_group(self):
        """Test case for create_group

        Create a new OAuth 2.0 Token Exchange Generator group.  # noqa: E501
        """
        pass

    def test_delete_group(self):
        """Test case for delete_group

        Delete an OAuth 2.0 Token Exchange Generator group.  # noqa: E501
        """
        pass

    def test_get_group(self):
        """Test case for get_group

        Find an OAuth 2.0 Token Exchange Generator group by ID.  # noqa: E501
        """
        pass

    def test_get_groups(self):
        """Test case for get_groups

        Get list of OAuth 2.0 Token Exchange Generator groups.  # noqa: E501
        """
        pass

    def test_get_settings(self):
        """Test case for get_settings

        Get general OAuth 2.0 Token Exchange Generator settings.  # noqa: E501
        """
        pass

    def test_update_group(self):
        """Test case for update_group

        Update an OAuth 2.0 Token Exchange Generator group.  # noqa: E501
        """
        pass

    def test_update_settings(self):
        """Test case for update_settings

        Update general OAuth 2.0 Token Exchange Generator settings.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
