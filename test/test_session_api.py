# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.session_api import SessionApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSessionApi(unittest.TestCase):
    """SessionApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.session_api.SessionApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_source_policy(self):
        """Test case for create_source_policy

        Create a new session policy.  # noqa: E501
        """
        pass

    def test_delete_source_policy(self):
        """Test case for delete_source_policy

        Delete a session policy.  # noqa: E501
        """
        pass

    def test_get_application_policy(self):
        """Test case for get_application_policy

        Get the application session policy.  # noqa: E501
        """
        pass

    def test_get_global_policy(self):
        """Test case for get_global_policy

        Get the global authentication session policy.  # noqa: E501
        """
        pass

    def test_get_session_settings(self):
        """Test case for get_session_settings

        Get general session management settings.  # noqa: E501
        """
        pass

    def test_get_source_policies(self):
        """Test case for get_source_policies

        Get list of session policies.  # noqa: E501
        """
        pass

    def test_get_source_policy(self):
        """Test case for get_source_policy

        Find session policy by ID.  # noqa: E501
        """
        pass

    def test_update_application_policy(self):
        """Test case for update_application_policy

        Update the application session policy.  # noqa: E501
        """
        pass

    def test_update_global_policy(self):
        """Test case for update_global_policy

        Update the global authentication session policy.  # noqa: E501
        """
        pass

    def test_update_session_settings(self):
        """Test case for update_session_settings

        Update general session management settings.  # noqa: E501
        """
        pass

    def test_update_source_policy(self):
        """Test case for update_source_policy

        Update a session policy.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
