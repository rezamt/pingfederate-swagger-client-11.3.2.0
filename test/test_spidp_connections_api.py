# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.spidp_connections_api import SpidpConnectionsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSpidpConnectionsApi(unittest.TestCase):
    """SpidpConnectionsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.spidp_connections_api.SpidpConnectionsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_connection_cert(self):
        """Test case for add_connection_cert

        Add a new IdP connection certificate.  # noqa: E501
        """
        pass

    def test_create_connection(self):
        """Test case for create_connection

        Create a new IdP connection.  # noqa: E501
        """
        pass

    def test_delete_connection(self):
        """Test case for delete_connection

        Delete an IdP connection.  # noqa: E501
        """
        pass

    def test_get_connection(self):
        """Test case for get_connection

        Find IdP connection by ID.  # noqa: E501
        """
        pass

    def test_get_connection_certs(self):
        """Test case for get_connection_certs

        Get the IdP connection's certificates.  # noqa: E501
        """
        pass

    def test_get_connections(self):
        """Test case for get_connections

        Get list of IdP connections.  # noqa: E501
        """
        pass

    def test_get_decryption_keys(self):
        """Test case for get_decryption_keys

        Get the decryption keys of an IdP connection.  # noqa: E501
        """
        pass

    def test_get_signing_settings(self):
        """Test case for get_signing_settings

        Get the IdP connection's signature settings.  # noqa: E501
        """
        pass

    def test_update_connection(self):
        """Test case for update_connection

        Update an IdP connection.  # noqa: E501
        """
        pass

    def test_update_connection_certs(self):
        """Test case for update_connection_certs

        Update the IdP connection's certificates.  # noqa: E501
        """
        pass

    def test_update_decryption_keys(self):
        """Test case for update_decryption_keys

        Updating the IdP connection's decryption keys.  # noqa: E501
        """
        pass

    def test_update_signing_settings(self):
        """Test case for update_signing_settings

        Update the IdP connection's signature settings.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
