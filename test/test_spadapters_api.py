# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.spadapters_api import SpadaptersApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSpadaptersApi(unittest.TestCase):
    """SpadaptersApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.spadapters_api.SpadaptersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_sp_adapter(self):
        """Test case for create_sp_adapter

        Create a new SP adapter instance.  # noqa: E501
        """
        pass

    def test_delete_sp_adapter(self):
        """Test case for delete_sp_adapter

        Delete an SP adapter instance.  # noqa: E501
        """
        pass

    def test_get_action(self):
        """Test case for get_action

        Find an SP adapter instance's action by ID.  # noqa: E501
        """
        pass

    def test_get_actions(self):
        """Test case for get_actions

        List the actions for an SP adapter instance.  # noqa: E501
        """
        pass

    def test_get_sp_adapter(self):
        """Test case for get_sp_adapter

        Find an SP adapter instance by ID.  # noqa: E501
        """
        pass

    def test_get_sp_adapter_descriptors(self):
        """Test case for get_sp_adapter_descriptors

        Get the list of available SP adapter descriptors.  # noqa: E501
        """
        pass

    def test_get_sp_adapter_descriptors_by_id(self):
        """Test case for get_sp_adapter_descriptors_by_id

        Get the description of an SP adapter plugin by ID.  # noqa: E501
        """
        pass

    def test_get_sp_adapters(self):
        """Test case for get_sp_adapters

        Get the list of configured SP adapter instances.  # noqa: E501
        """
        pass

    def test_get_url_mappings(self):
        """Test case for get_url_mappings

        (Deprecated) List the mappings between URLs and adapter instances.  # noqa: E501
        """
        pass

    def test_invoke_action_with_options(self):
        """Test case for invoke_action_with_options

        Invokes an action for an SP adapter instance.  # noqa: E501
        """
        pass

    def test_update_sp_adapter(self):
        """Test case for update_sp_adapter

        Update an SP adapter instance.  # noqa: E501
        """
        pass

    def test_update_url_mappings(self):
        """Test case for update_url_mappings

        (Deprecated) Update the mappings between URLs and adapters instances.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
