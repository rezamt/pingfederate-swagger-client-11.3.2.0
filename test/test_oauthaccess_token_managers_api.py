# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.oauthaccess_token_managers_api import OauthaccessTokenManagersApi  # noqa: E501
from swagger_client.rest import ApiException


class TestOauthaccessTokenManagersApi(unittest.TestCase):
    """OauthaccessTokenManagersApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.oauthaccess_token_managers_api.OauthaccessTokenManagersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_token_manager(self):
        """Test case for create_token_manager

        Create a token management plugin instance.  # noqa: E501
        """
        pass

    def test_delete_token_manager(self):
        """Test case for delete_token_manager

        Delete a token management plugin instance.  # noqa: E501
        """
        pass

    def test_get_settings(self):
        """Test case for get_settings

        Get general access token management settings.  # noqa: E501
        """
        pass

    def test_get_token_manager(self):
        """Test case for get_token_manager

        Get a specific token management plugin instance.  # noqa: E501
        """
        pass

    def test_get_token_manager_descriptor(self):
        """Test case for get_token_manager_descriptor

        Get the description of a token management plugin descriptor.  # noqa: E501
        """
        pass

    def test_get_token_manager_descriptors(self):
        """Test case for get_token_manager_descriptors

        Get the list of available token management plugin descriptors.  # noqa: E501
        """
        pass

    def test_get_token_managers(self):
        """Test case for get_token_managers

        Get a list of all token management plugin instances.  # noqa: E501
        """
        pass

    def test_update_settings(self):
        """Test case for update_settings

        Update general access token management settings.  # noqa: E501
        """
        pass

    def test_update_token_manager(self):
        """Test case for update_token_manager

        Update a token management plugin instance.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
