# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.authentication_policy_contracts_api import AuthenticationPolicyContractsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestAuthenticationPolicyContractsApi(unittest.TestCase):
    """AuthenticationPolicyContractsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.authentication_policy_contracts_api.AuthenticationPolicyContractsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_authentication_policy_contract(self):
        """Test case for create_authentication_policy_contract

        Create a new Authentication Policy Contract.  # noqa: E501
        """
        pass

    def test_delete_authentication_policy_contract(self):
        """Test case for delete_authentication_policy_contract

        Delete an Authentication Policy Contract.  # noqa: E501
        """
        pass

    def test_get_authentication_policy_contract(self):
        """Test case for get_authentication_policy_contract

        Gets the Authentication Policy Contract by ID.  # noqa: E501
        """
        pass

    def test_get_authentication_policy_contracts(self):
        """Test case for get_authentication_policy_contracts

        Gets the Authentication Policy Contracts.  # noqa: E501
        """
        pass

    def test_update_authentication_policy_contract(self):
        """Test case for update_authentication_policy_contract

        Update an Authentication Policy Contract by ID.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
