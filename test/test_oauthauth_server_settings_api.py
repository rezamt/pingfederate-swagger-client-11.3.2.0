# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.oauthauth_server_settings_api import OauthauthServerSettingsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestOauthauthServerSettingsApi(unittest.TestCase):
    """OauthauthServerSettingsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.oauthauth_server_settings_api.OauthauthServerSettingsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_common_scope(self):
        """Test case for add_common_scope

        Add a new common scope.  # noqa: E501
        """
        pass

    def test_add_common_scope_group(self):
        """Test case for add_common_scope_group

        Create a new common scope group.  # noqa: E501
        """
        pass

    def test_add_exclusive_scope(self):
        """Test case for add_exclusive_scope

        Add a new exclusive scope.  # noqa: E501
        """
        pass

    def test_add_exclusive_scope_group(self):
        """Test case for add_exclusive_scope_group

        Create a new exclusive scope group.  # noqa: E501
        """
        pass

    def test_get_authorization_server_settings(self):
        """Test case for get_authorization_server_settings

        Get the Authorization Server Settings.  # noqa: E501
        """
        pass

    def test_get_common_scope(self):
        """Test case for get_common_scope

        Get an existing common scope.  # noqa: E501
        """
        pass

    def test_get_common_scope_group(self):
        """Test case for get_common_scope_group

        Get an existing common scope group.  # noqa: E501
        """
        pass

    def test_get_exclusive_scope(self):
        """Test case for get_exclusive_scope

        Get an existing exclusive scope.  # noqa: E501
        """
        pass

    def test_get_exclusive_scope_group(self):
        """Test case for get_exclusive_scope_group

        Get an existing exclusive scope group.  # noqa: E501
        """
        pass

    def test_remove_common_scope(self):
        """Test case for remove_common_scope

        Remove an existing common scope.  # noqa: E501
        """
        pass

    def test_remove_common_scope_group(self):
        """Test case for remove_common_scope_group

        Remove an existing common scope group.  # noqa: E501
        """
        pass

    def test_remove_exclusive_scope(self):
        """Test case for remove_exclusive_scope

        Remove an existing exclusive scope.  # noqa: E501
        """
        pass

    def test_remove_exclusive_scope_group(self):
        """Test case for remove_exclusive_scope_group

        Remove an existing exclusive scope group.  # noqa: E501
        """
        pass

    def test_update_authorization_server_settings(self):
        """Test case for update_authorization_server_settings

        Update the Authorization Server Settings.  # noqa: E501
        """
        pass

    def test_update_common_scope(self):
        """Test case for update_common_scope

        Update an existing common scope.  # noqa: E501
        """
        pass

    def test_update_common_scope_group(self):
        """Test case for update_common_scope_group

        Update an existing common scope group.  # noqa: E501
        """
        pass

    def test_update_exclusive_scope(self):
        """Test case for update_exclusive_scope

        Update an existing exclusive scope.  # noqa: E501
        """
        pass

    def test_update_exclusive_scope_groups(self):
        """Test case for update_exclusive_scope_groups

        Update an existing exclusive scope group.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
