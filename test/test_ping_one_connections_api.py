# coding: utf-8

"""
    Administrative API Documentation

    The PingFederate Administrative API is a REST-based interface that provides a programmatic way to make configuration changes to PingFederate as an alternative to using the administrative console.<br/><br/>Expand the resources below to display implementation details on that resource such as the available endpoints, the parameter and response models for the operation, and the model structure of the resources themselves. Each resource operation comes with the ability to interact with the API. You are prompted for proper administration credentials when you try to perform an API operation.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.ping_one_connections_api import PingOneConnectionsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestPingOneConnectionsApi(unittest.TestCase):
    """PingOneConnectionsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.ping_one_connections_api.PingOneConnectionsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_ping_one_connection(self):
        """Test case for create_ping_one_connection

        Create a new PingOne connection.  # noqa: E501
        """
        pass

    def test_delete_ping_one_connection(self):
        """Test case for delete_ping_one_connection

        Delete a PingOne connection.  # noqa: E501
        """
        pass

    def test_get_credential_status(self):
        """Test case for get_credential_status

        Get the status of the credential associated with the PingOne connection  # noqa: E501
        """
        pass

    def test_get_ping_one_connection(self):
        """Test case for get_ping_one_connection

        Get a PingOne connection with the specified ID.  # noqa: E501
        """
        pass

    def test_get_ping_one_connection_associations(self):
        """Test case for get_ping_one_connection_associations

        Get information about components using this connection to access PingOne services.  # noqa: E501
        """
        pass

    def test_get_ping_one_connection_environments(self):
        """Test case for get_ping_one_connection_environments

        Get the list of environments that the PingOne connection has access to.  # noqa: E501
        """
        pass

    def test_get_ping_one_connection_usages(self):
        """Test case for get_ping_one_connection_usages

        Get the list of resources that reference this PingOne connection.  # noqa: E501
        """
        pass

    def test_get_ping_one_connections(self):
        """Test case for get_ping_one_connections

        Get the list of all PingOne connections.  # noqa: E501
        """
        pass

    def test_update_ping_one_connection(self):
        """Test case for update_ping_one_connection

        Update a PingOne connection.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
